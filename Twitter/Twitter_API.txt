import sys
import operator
import requests
import json
import twitter
from watson_developer_cloud import PersonalityInsightsV2 as PersonalityInsights
twitter_consumer_key = '********************'#go to twitter devolper and get it
twitter_consumer_secret = '********************'#go to twitter devolper and get it
twitter_access_token = '********************'#go to twitter devolper and get it
twitter_access_secret = '********************'#go to twitter devolper and get it
twitter_api = twitter.Api(consumer_key=twitter_consumer_key, consumer_secret=twitter_consumer_secret, access_token_key=twitter_access_token, access_token_secret=twitter_access_secret)
handle = "shreyaghoshal"

statuses = twitter_api.GetUserTimeline(screen_name=handle, count=10, include_rts=False)
text = ""
for status in statuses:
  if (status.lang =='en'):
        text += status.text.encode('utf-8')
pi_username='****'#whenever we use pi format we  will tree like strucure by default
pi_password='****'#get these username and password through the IBM bluemix they are the cloud provider to store it
personality_insights = PersonalityInsights(username=pi_username, password=pi_password)
def analyze(handle)#will be in the form of JSON format
pi_result=personality_insights.profile(text)
return pi_result
def flatten(orig)#it will get into the tree like structure into a JSON format for accessing purpose
#code for inbuilt function comapare
#def compare(dict1, dict2):
#    compared_data = {}
#    for keys in dict1:
#        if dict1[keys] != dict2[keys]:
#                compared_data[keys]=abs(dict1[keys] - dict2[keys])
#    return compared_data
def compare(dict1,dict2)
user_handle = "@********"#your account name
celebrity_handle = "@******"#your friends account name
user_result = analyze(user_handle)
celebrity_result = analyze(celebrity_handle)
#flatten is used to print the date in JSON format
user= flatten(user_result)
celebrity = flatten(celebrity_result)
compared_results = compare(user,celebrity)
sorted_result = sorted(compared_results.items(), key=operator.itemgetter(1))
for keys, value in sorted_result[:5]:
    print keys,
    print(user[keys]),
    print ('->'),
    print (celebrity[keys]),
    print ('->'),
    print (compared_results[keys])
